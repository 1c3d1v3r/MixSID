Proposal for an addressing scheme in a dual sid solution for the C64
====================================================================

There are three address control lines in this scheme, although only
one line is strictly required for basic operation of SID2 at the most
commonly used addresses for stereo sid tunes.

The MODE SELECT (MS) line controls the addressing mode, while the IO
ENABLE (IO1EN/IO2EN) lines control whether or not the second SID
appears at $DE00 or $DF00 when in orthogonal (stereo) addressing mode
(given that the corresponding signals IO1 and IO2 are connected at
all). Finally, the PRIORITY SELECT line can optionally be used to
control which physical SID chip is put at stereo addresses in
orthogonal (stereo) addressing mode and which one remains at $d400
(i.e. virtually swap the chips in terms of addressing).

MODE SELECT
===========

The available addressing modes controled by MODE SELECT are:

Parallel Addressing Mode
========================

If MODE SELECT is HIGH, SID2 will be addressed in parallel with SID1
each 32 bytes in $D400-D800 (as usual).

In addition, SID2 will *only* be selected if RW is low, so the second
sid will always be write-only when it appears in parallel with
SID1. This way read accesses (for paddles and music effects) will only
ever read from SID1, while SID2 completely ignores read accesses).

Orthogonal Addressing Mode
==========================

If MODE SELECT is LOW, SID1 and SID2 will be addressed as shown in the
table below.

In this addressing scheme, the second SID will always appear at *all*
of the common stereo addresses *at once* (so that a SID tune will find
the second sid regardless of whether it expects it at d420, d500, de00
or df00). Most importantly, the first SID is guaranteed *not* to appear
at any of the addresses that SID2 appears at.

In addition, SID2 will become fully read-write again when addressed
orthogonal to SID1, as opposed to parallel addressing where it is
forced write-only.

-----------------------
|ADDR  | SID1 | SID2  |
|---------------------|
| $D400 |  X   |      |  
| $D420 |      |  X   | <- $D420
| $D440 |  X   |      |  
| $D460 |      |  X   |  
| $D480 |  X   |      |  
| $D4A0 |      |  X   |  
| $D4C0 |  X   |      |  
| $D4E0 |      |  X   |  
| $D500 |      |  X   | <- $D500
| $D520 |      |  X   |  
| $D540 |      |  X   |  
| $D560 |      |  X   |  
| $D580 |      |  X   |  
| $D5A0 |      |  X   |  
| $D5C0 |      |  X   |  
| $D5E0 |      |  X   |  
| $D600 |  X   |      |  
| $D620 |      |  X   |  
| $D640 |  X   |      |  
| $D660 |      |  X   |  
| $D680 |  X   |      |  
| $D6A0 |      |  X   |  
| $D6C0 |  X   |      |  
| $D6E0 |      |  X   |  
| $D700 |      |  X   |  
| $D720 |      |  X   |  
| $D740 |      |  X   |  
| $D760 |      |  X   |  
| $D780 |      |  X   |  
| $D7A0 |      |  X   |  
| $D7C0 |      |  X   |  
| $D7E0 |      |  X   |
|---------------------|
| $DE00 |      |  X   | optional (connect /IO1, use IO1=low to disable)
| $DF00 |      |  X   | optional (connect /IO2, use IO2=low to disable)
-----------------------

IO ENABLE
=========

Since using the common IO areas IO1 and IO2 ($DE00 and $DF00) for SID2
may cause conflicts with other hardware using these areas (such as
freezer cartridges), the IO ENABLE signals (IO1EN, IO2EN) can be used
to enable/disable these addresses when in orthogonal mode.

This allows the user to keep the option of using solutions like
PROPHET/MSSIAH that use the io areas for SID2. If these addresses are
required temporarily, the user may permanently connect IO1 and IO2 and
simply control their application via the IO ENABLE signals. If these
addresses are not needed at all, the user can opt to simply not
connect the IO ENABLE and IO1/IO2 lines.

PRIORITY SELECT
===============

Another control signal called PRIORITY SELECT (PS) will select which
of the physical SID chips will be placed at the stereo locations of
the orthogonal adressing mode, i.e. it will switch the roles of SID1
and SID2 as depicted in the table above. If this is not needed, the PS
line may simply stay unconnected.

One drawback of this solution is that the paddles connected to the
control ports will not work in stereo addressing mode with switched
priority. Instead, the paddles connected to the optional onboard pin
header providing POTX and POTY of SID2 (if any) will now be read at
$d4xx.

Rationale
=========

This solution removes the need for multiple jumper configurations to
select the adress of SID2, which have to be changed manually (via
jumpers or (rotary) switches), or controlled with additional custom
hardware which multiplexes the lines accordingly (e.g. virtualizing
the jumper settings).

Instead, all three lines are digital control lines. If they are not
connected, they are driven high by the internal pullups of the
16V8. The logic has been designed to use the most common setting as
the default when the signal is high. Leaving all three control lines
high implies parallell adressing, inclusion of $de00/$df00 and normal
priority.

This allows the user to use a simple SPST switch to ground if he
wishes to control one of these lines.

Using digital control signals also means that switching between modes
may happen at runtime because the CS signals of both sids are
guaranteed to be driven correctly at all times. (If naively using
jumpers or a rotary switch, the CS lines of the SIDs are likely to
float during switching and the SIDs will feel compelled to put data on
the bus at random, causing the C64 to crash).

Implementation
==============

Here is a first draft of the 16v8 GAL logic equotations required to
implement this scheme:

GAL16V8
SMRTSID

A5   A8   /IO1 /IO2 /CS  RW   MS   PS  IO1EN GND
NC   CSI1 CSO1 CSI2 CSO2 /CS1 /CS2 NC  IO2EN  VCC

CSO1 = MS * CS +
      /MS * CS * /A5 +
      /MS * CS * /A8

CSO2 = MS * CS * /RW +
      /MS * CS * A5 +
      /MS * CS * A8 +
      /MS * CS * IO1EN * IO1 +
      /MS * CS * IO2EN * IO2

CS1 = PS * CSI1 +
      /PS * CSI2

CS2 = PS * CSI2 +
      /PS * CSI1

DESCRIPTION:

A5, A8, IO1, IO2, RW, CS = C64 input signals
MS, PS, IO1EN, IO2EN     = control signals
CS1, CS2                 = chip select outputs SID1, SID2

CSO1, CSO2 -> connect externally to CSI1, CSI2

MS = MODE SELECT:

   HIGH = PARALLEL, BOTH SIDS AT D400-D800
   LOW  = STEREO, SID1 AT $D400, SID2 AT D420, D500, DE00*, DF00*
   * (only if IO1 resp. IO2 are connected and IOnEN=low)
   
PS = PRIORITY SELECT, select SID at stereo locations in STEREO mode

   HIGH = NORMAL  (SID2 addressed at stereo locations)
   LOW  = SWAPPED (SID1 addressed at stereo locations)

IO1EN, IO2EN = IO ENABLE lines

   HIGH: Second SID also at the corresponding address
   LOW:  Prevent SID2 at the corresponding address
      
